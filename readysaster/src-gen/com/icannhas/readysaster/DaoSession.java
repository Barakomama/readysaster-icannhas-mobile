package com.icannhas.readysaster;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.icannhas.readysaster.Data;
import com.icannhas.readysaster.PersonalDetails;
import com.icannhas.readysaster.LocationDetails;
import com.icannhas.readysaster.StructureDetails;

import com.icannhas.readysaster.DataDao;
import com.icannhas.readysaster.PersonalDetailsDao;
import com.icannhas.readysaster.LocationDetailsDao;
import com.icannhas.readysaster.StructureDetailsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dataDaoConfig;
    private final DaoConfig personalDetailsDaoConfig;
    private final DaoConfig locationDetailsDaoConfig;
    private final DaoConfig structureDetailsDaoConfig;

    private final DataDao dataDao;
    private final PersonalDetailsDao personalDetailsDao;
    private final LocationDetailsDao locationDetailsDao;
    private final StructureDetailsDao structureDetailsDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dataDaoConfig = daoConfigMap.get(DataDao.class).clone();
        dataDaoConfig.initIdentityScope(type);

        personalDetailsDaoConfig = daoConfigMap.get(PersonalDetailsDao.class).clone();
        personalDetailsDaoConfig.initIdentityScope(type);

        locationDetailsDaoConfig = daoConfigMap.get(LocationDetailsDao.class).clone();
        locationDetailsDaoConfig.initIdentityScope(type);

        structureDetailsDaoConfig = daoConfigMap.get(StructureDetailsDao.class).clone();
        structureDetailsDaoConfig.initIdentityScope(type);

        dataDao = new DataDao(dataDaoConfig, this);
        personalDetailsDao = new PersonalDetailsDao(personalDetailsDaoConfig, this);
        locationDetailsDao = new LocationDetailsDao(locationDetailsDaoConfig, this);
        structureDetailsDao = new StructureDetailsDao(structureDetailsDaoConfig, this);

        registerDao(Data.class, dataDao);
        registerDao(PersonalDetails.class, personalDetailsDao);
        registerDao(LocationDetails.class, locationDetailsDao);
        registerDao(StructureDetails.class, structureDetailsDao);
    }
    
    public void clear() {
        dataDaoConfig.getIdentityScope().clear();
        personalDetailsDaoConfig.getIdentityScope().clear();
        locationDetailsDaoConfig.getIdentityScope().clear();
        structureDetailsDaoConfig.getIdentityScope().clear();
    }

    public DataDao getDataDao() {
        return dataDao;
    }

    public PersonalDetailsDao getPersonalDetailsDao() {
        return personalDetailsDao;
    }

    public LocationDetailsDao getLocationDetailsDao() {
        return locationDetailsDao;
    }

    public StructureDetailsDao getStructureDetailsDao() {
        return structureDetailsDao;
    }

}
